DESIGN CODE
module bin_gray(bin,gray);
input [3:0] bin;
output [3:0] gray;
assign gray[3]=bin[3];
assign gray[2]=bin[3]^bin[2];
assign gray[1]=bin[2]^bin[1];
assign gray[0]=bin[1]^bin[0];'
endmodule

TESTBENCH
module bin_gray_tb;
reg [3:0] b;
wire [3:0] g;
bin_graymygate(.bin(b),.gray(g));
initial
begin
$display("\tB3\tB2\tB1\tB0\tG3\tG2\tG1\tG0");
$monitor(" \t%b\t%b\t%b\t%b\t%b\t%b\t%b\t%b",b[3],b[2],b[1],b[0],g[3],g[2],g[1],g[0]);
$dumpfile("test.vcd");
$dumpvars(1);
b=4'b0000;
end
always #16 b[3]=~b[3];
always #8 b[2]=~b[2];
always #4 b[1]=~b[1];
always #2 b[0]=~b[0];
initial #32 $finish;
endmodule